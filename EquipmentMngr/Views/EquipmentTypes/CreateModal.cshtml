@model EquipmentMngr.Data.Entities.EquipmentType

@{
    ViewData["Action"] = "Create";
    ViewData["Title"] = "Equipment Type";
}
<div class="modal inmodal" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated bounceInRight">
            <form asp-action="CreateModal">

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <i class="fa fa-laptop modal-icon"></i>
                    <h4 class="modal-title">New Equipment Type</h4>
                    <small class="font-bold">Use the form below to add a new Equipment Type</small>
                </div>
                <div class="modal-body">
                    <p>
                        <strong>Lorem Ipsum is simply dummy</strong> text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown
                    </p>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="form-group">
                        <a asp-action="Index" class="btn btn-white">Close</a>
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}




}